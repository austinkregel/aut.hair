# For more information: https://laravel.com/docs/sail
version: '3'
services:
    proxy:
        image: 'jc21/nginx-proxy-manager:latest'
        restart: unless-stopped
        ports:
            # These ports are in format <host-port>:<container-port>
            - '80:80' # Public HTTP Port
            - '443:443' # Public HTTPS Port
            - '81:81' # Admin Web Port
            - '6001:6001' # Websocket port
            # Add any other Stream port you want to expose
            # - '21:21' # FTP

            # Uncomment the next line if you uncomment anything in the section
            # environment:
            # Uncomment this if you want to change the location of
            # the SQLite DB file within the container
            # DB_SQLITE_FILE: "/data/database.sqlite"

            # Uncomment this if IPv6 is not enabled on your host
            # DISABLE_IPV6: 'true'
#        environment:
#            DB_MYSQL_HOST: "mysql"
#            DB_MYSQL_PORT: 3306
#            DB_MYSQL_USER: '${DB_USERNAME}'
#            DB_MYSQL_PASSWORD: '${DB_PASSWORD}'
#            DB_MYSQL_NAME: "proxy_manager"
        networks:
            - sail

        volumes:
            - proxy-data:/data
            - proxy-letsencrypt:/etc/letsencrypt
    laravel.test:
        build:
            context: ./docker/production
            dockerfile: Dockerfile
            args:
              WWWGROUP: 1000
              WWWUSER: 1000
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - 8000:8000
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - proxy
            - mariadb
            - redis
    horizon:
      build:
        context: ./docker/horizon
        dockerfile: Dockerfile
        args:
          WWWGROUP: 1000
          WWWUSER: 1000
      extra_hosts:
        - 'host.docker.internal:host-gateway'
      volumes:
        - '.:/var/www/html'
      networks:
        - sail
      depends_on:
        - mariadb
        - redis
    weboscket:
      build:
        context: ./docker/websocket
        dockerfile: Dockerfile
        args:
          WWWGROUP: 1000
          WWWUSER: 1000
      extra_hosts:
        - 'host.docker.internal:host-gateway'
      volumes:
        - '.:/var/www/html'
      networks:
        - sail
      depends_on:
        - mariadb
        - redis
    mariadb:
        image: 'mariadb:10'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sail-mariadb:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-mariadb:
        driver: local
    sail-redis:
        driver: local
    proxy-data:
        driver: local
    proxy-letsencrypt:
        driver: local
